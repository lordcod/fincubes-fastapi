name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
env:
  registry: my_registry_name
  DB_HOST: localhost
  DB_USERNAME: postgres
  DB_PASSWORD: postgres

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432/tcp
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - 6379/tcp
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
          --entrypoint redis-server

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Build app
        run: poetry build

      - name: Run app
        run: |
          poetry run pytest tests
        env:
          HCAPTCHA_SECRET_KEY: ${{ secrets.HCAPTCHA_SECRET_KEY }}
          TURNSTILE_SECRET_KEY: ${{ secrets.TURNSTILE_SECRET_KEY }}
          SMTP_HOST: ${{ secrets.SMTP_HOST }}
          SMTP_PORT: ${{ secrets.SMTP_PORT }}
          SMTP_USER: ${{ secrets.SMTP_USER }}
          SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD }}
          AWS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
          BUCKET_NAME: ${{ secrets.BUCKET_NAME }}
          YANDEX_CDN_RESOURCE_ID: ${{ secrets.YANDEX_CDN_RESOURCE_ID }}
          DATABASE_URL: postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}
          REDIS_URL: redis://@localhost:${{ job.services.redis.ports[6379] }}
          SECRET_KEY: your-256-bit-secret

      - name: Deploy using ssh
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST  }}
          username: ${{ secrets.SERVER_USER  }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: 22
          script: |
            set -e
            cd ~/fincubes
            git fetch origin main
            git checkout main
            git reset --hard origin/main
            docker build -t fincubes-fastapi .
            sudo systemctl restart fincubes.service
            echo "Deployment completed successfully"
